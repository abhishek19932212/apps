Description: Create an EC2 instance by AWS CloudFormation
Resources:
  SecurityGroupDemoSvrTraffic:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: Jenkins-SG1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: For traffic from Internet
      GroupDescription: Security Group for demo server
      VpcId: vpc-afb094d7
  EC2InstanceDemoSvr:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: us-west-2a
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: 'true'
            VolumeSize: '8'
            VolumeType: gp2
      ImageId: ami-089618304e65b26ac
      InstanceType: t2.micro
      KeyName: OpenVPN-Demo
      UserData: 
       Fn::Base64: |
        #!/bin/sh
        cat <<'EOF' > /etc/apache2/sites-available/planhub-frontend-waf.conf
        <VirtualHost *:80>
	      ServerName qa1.planhub.com
	      ServerAlias qa1.planhub.com
	      DocumentRoot /var/www/html/frontend-planhub-new/dist
	      ErrorLog ${APACHE_LOG_DIR}/error.log
      	CustomLog ${APACHE_LOG_DIR}/access.log cloudwatch
        RewriteEngine On
        RewriteCond %{HTTP:X-Forwarded-Proto} =http
        RewriteRule .* https://%{HTTP:Host}%{REQUEST_URI} [L,R=permanent]
        </VirtualHost>
        <VirtualHost *:443>
        DocumentRoot /var/www/html/frontend-planhub-new/dist
        ServerName app.planhub.com
        ServerAlias app.planhub.com
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log cloudwatch
        RewriteEngine On
        RewriteRule ^#/(.*)$ $1
        SSLEngine on
        SSLCertificateFile /etc/apache2/ssl/NEW_STAR_planhub_com.crt
        SSLCertificateKeyFile /etc/apache2/ssl/new_star.planhub.com.key
        SSLCertificateChainFile  /etc/apache2/ssl/planhub_intermediate.crt
        SSLCipherSuite HIGH:+MEDIUM:!SSLv2:!EXP:!ADH:!aNULL:!eNULL:!NULL
        Header always set Strict-Transport-Security "max-age=63072000;"
        SSLProtocol all -SSLv2 -SSLv3
        SSLHonorCipherOrder on
        SSLCipherSuite "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+S$
        <Directory  /var/www/html/frontend-planhub-new>
        AllowOverride All
        Require all granted
        RewriteEngine On
        RewriteRule ^(.*)$ $1
        </Directory>
        <IfModule mod_deflate.c>
        SetOutputFilter DEFLATE
        AddOutputFilterByType DEFLATE text/plain
        AddOutputFilterByType DEFLATE text/html
        AddOutputFilterByType DEFLATE text/xml
        AddOutputFilterByType DEFLATE text/css
        AddOutputFilterByType DEFLATE application/xml
        AddOutputFilterByType DEFLATE application/xhtml+xml
        AddOutputFilterByType DEFLATE application/rss+xml
        AddOutputFilterByType DEFLATE application/javascript
        AddOutputFilterByType DEFLATE application/x-javascript
        SetEnvIfNoCase Request_URI .(?:exe|t?gz|zip|iso|tar|bz2|sit|rar) no-gzip dont-vary
        SetEnvIfNoCase Request_URI .(?:gif|jpe?g|jpg|ico|png)  no-gzip dont-vary
        SetEnvIfNoCase Request_URI .pdf no-gzip dont-vary
        BrowserMatch ^Mozilla/4 gzip-only-text/html
        BrowserMatch ^Mozilla/4.0[678] no-gzip
        BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
        Header append Vary User-Agent env=!dont-vary
        DeflateFilterNote Input instr
        DeflateFilterNote Output outstr
        DeflateFilterNote Ratio ratio
        LogFormat '"%r" %{outstr}n/%{instr}n %{ratio}n%%' DEFLATE
        CustomLog logs/deflate_log DEFLATE
        </IfModule>
        </VirtualHost>
        EOF
        cat <<'EOF' > /etc/apache2/sites-available/planhub-frontend-waf.conf
        <VirtualHost *:80>
        ServerName qa1.api.planhub.com
        ServerAlias qa1.api.planhub.com 
        DocumentRoot /var/www/html/api-planhub/public   
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log cloudwatch
        RewriteEngine On
        RewriteCond %{HTTP:X-Forwarded-Proto} =http
        RewriteRule .* https://%{HTTP:Host}%{REQUEST_URI} [L,R=permanent]
        </VirtualHost>
        <VirtualHost *:443>
        DocumentRoot /var/www/html/api-planhub/public
        ServerName api.planhub.com
        ServerAlias api.planhub.com
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log cloudwatch
        SSLEngine on
        SSLCertificateFile /etc/apache2/ssl/NEW_STAR_planhub_com.crt
        SSLCertificateKeyFile /etc/apache2/ssl/new_star.planhub.com.key
        SSLCertificateChainFile  /etc/apache2/ssl/planhub_intermediate.crt
        SSLCipherSuite HIGH:+MEDIUM:!SSLv2:!EXP:!ADH:!aNULL:!eNULL:!NULL
        Header always set Strict-Transport-Security "max-age=63072000;"
        SSLProtocol all -SSLv2 -SSLv3
        SSLHonorCipherOrder on
        SSLCipherSuite "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+S$
        <Directory /var/www/html/api-planhub/public>
        AllowOverride All
        Options Indexes FollowSymLinks
        Require all granted
        RewriteEngine On
        RewriteBase /
        RewriteCond %{RREQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^ index.php [QSA,L]
        RewriteRule .*\.(pdf|css|gif|png|bmp)$ - [F,NC]
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=200,L]
        </Directory>
        <IfModule mod_deflate.c>
        SetOutputFilter DEFLATE
        AddOutputFilterByType DEFLATE text/plain
        AddOutputFilterByType DEFLATE text/html
        AddOutputFilterByType DEFLATE text/xml
        AddOutputFilterByType DEFLATE text/css
        AddOutputFilterByType DEFLATE text/xml
        AddOutputFilterByType DEFLATE text/css
        AddOutputFilterByType DEFLATE application/xml
        AddOutputFilterByType DEFLATE application/xhtml+xml
        AddOutputFilterByType DEFLATE application/rss+xml
        AddOutputFilterByType DEFLATE application/javascript
        AddOutputFilterByType DEFLATE application/x-javascript
        SetEnvIfNoCase Request_URI .(?:exe|t?gz|zip|iso|tar|bz2|sit|rar) no-gzip dont-vary
        SetEnvIfNoCase Request_URI .(?:gif|jpe?g|jpg|ico|png)  no-gzip dont-vary
        SetEnvIfNoCase Request_URI .pdf no-gzip dont-vary
        BrowserMatch ^Mozilla/4 gzip-only-text/html
        BrowserMatch ^Mozilla/4.0[678] no-gzip
        BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
        Header append Vary User-Agent env=!dont-vary
        DeflateFilterNote Input instr
        DeflateFilterNote Output outstr
        DeflateFilterNote Ratio ratio
        LogFormat '"%r" %{outstr}n/%{instr}n %{ratio}n%%' DEFLATE
        CustomLog logs/deflate_log DEFLATE
        Header set Access-Control-Allow-Origin "*"
        </IfModule> 
        </VirtualHost>
        systemctl restart apache2
      NetworkInterfaces:
        - Description: Primary network interface
          DeviceIndex: '0'
          SubnetId: subnet-13ad7f59
          PrivateIpAddress: 172.31.46.64
          GroupSet:
            - !Ref SecurityGroupDemoSvrTraffic
AWSTemplateFormatVersion: '2010-09-09'
Description: Create RDS From Snapshot
Parameters:
  # Ownership
  Owner:
    Description: Enter Team or Individual Name Responsible for the Stack.
    Type: String
    Default: FirstName LastName
  Project:
    Type: String
    Default: MySQL RDS Creation
  DeleteAfter:
    Description: Enter Date It's Ok to Delete the Stack or 'Never' if meant to be persistent.
    Type: String
    Default: 00/00/201x

  # Network
  VPC:
    Description: Select VPC.
    Type: AWS::EC2::VPC::Id
    Default: vpc-afb094d7
  SubnetIdList:
    Description: Subnet ID List for Subnet Group Creation Allow Routing.
    Type: CommaDelimitedList
    Default: subnet-13ad7f59,subnet-a040f1d8,subnet-74ed6e29
  TcpPort:
    Description: Enter RDS Listening TCP Port number.
    Type: Number
    Default: 3306

  # Backup Settings
  BackupRetentionPeriod:
    Description: Enter Backup Retention Period in Days.
    Type: Number
    Default: 1
  PreferredBackupWindow:
    Description: Enter Preferred Backup Window Time (UTC).
    Type: String
    Default: 17:00-19:00
  PreferredMaintenanceWindow:
    Description: Enter Preferred Maintenance Window Time (UTC).
    Type: String
    Default: Sun:19:00-Sun:23:00

  # Storage
  ConfigureProvisionedIops:
    Description: Configure Iops
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  SnapshotOnDelete:
    Description: Create a Snapshot on Delete?
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  ProvisionedIopsValue:
    Description: "(Skip if Not Using Provisioned IOPS) Set Provisioned IOPS 1000-30000."
    Type: Number
    Default: 1000
    MinValue: 1000
    MaxValue: 30000

  # Patching
  AutoMinorVersionUpgrade:
    Description: Allow Automatic Minor Version Upgrades?
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'

  # Hardware
  InstanceType:
    Type: String
    Default: db.t2.micro
    AllowedValues:
    - db.t1.micro
    - db.t2.micro
    - db.t2.small
    - db.t2.medium
    - db.t2.large
    - db.m1.small
    - db.m1.medium
    - db.m1.large
    - db.m1.xlarge
    - db.m3.medium
    - db.m3.large
    - db.m3.xlarge
    - db.m3.2xlarge
    - db.m4.large
    - db.m4.xlarge
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.m4.10xlarge
    - db.r3.large
    - db.r3.xlarge
    - db.r3.2xlarge
    - db.r3.4xlarge
    - db.r3.8xlarge
  MultiAvailabilityZone:
    Description: Enable Multi Availability Zones?
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'

  # Restore
  SnapshotArn:
    Type: String
    Default: arn:aws:rds:us-west-2:162022628823:snapshot:demo-snapshot

Conditions:
  ConfigureSnapshotOnDelete: !Equals [ !Ref SnapshotOnDelete, 'true' ]

Resources:
  RDSAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Instance to RDS Access
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref "AWS::StackName"
      - Key: Owner
        Value: !Ref Owner
      - Key: Project
        Value: !Ref Project
      - Key: DeleteAfter
        Value: !Ref DeleteAfter
  AccessSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: RDSAccessSecurityGroup
    Properties:
      GroupId: !Ref RDSAccessSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref TcpPort
      ToPort: !Ref TcpPort
      SourceSecurityGroupId: sg-011f1f61c243dab3f
  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Join [ "", [ "RDS Subnet Group for ", !Ref "AWS::StackName" ] ]
      SubnetIds: !Ref SubnetIdList
      Tags:
      - Key: Name
        Value: !Ref "AWS::StackName"
      - Key: Owner
        Value: !Ref Owner
      - Key: Project
        Value: !Ref Project
      - Key: DeleteAfter
        Value: !Ref DeleteAfter
  DbInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    DependsOn:
    - DbSubnetGroup
    - RDSAccessSecurityGroup
    Properties:
      DBSnapshotIdentifier: !Ref SnapshotArn
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      DBInstanceClass: !Ref InstanceType
      DBInstanceIdentifier: !Ref AWS::StackName
      DBSubnetGroupName: !Ref DbSubnetGroup
      MultiAZ: !Ref MultiAvailabilityZone
      Port: !Ref TcpPort
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      PubliclyAccessible: true
      StorageEncrypted: false
      StorageType: gp2
      VPCSecurityGroups:
      - !Ref RDSAccessSecurityGroup
      Tags:
      - Key: Name
        Value: !Ref "AWS::StackName"
      - Key: Owner
        Value: !Ref Owner
      - Key: Project
        Value: !Ref Project
      - Key: DeleteAfter
        Value: !Ref DeleteAfter
Outputs:
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value: !Ref Owner
  Project:
    Description: The project name
    Value: !Ref Project
  VPC:
    Description: VPC Used
    Value: !Ref VPC
  RDSPort:
    Description: RDS Port
    Value:
      Fn::GetAtt:
      - DbInstance
      - Endpoint.Port
  DbSubnetGroup:
    Description: DB Subnet Group Created.
    Value: !Ref DbSubnetGroup
  RDSAccessSecurityGroup:
    Description: RDS Access Security Group Created.
    Value: !Ref RDSAccessSecurityGroup
  SubnetIdList:
    Description: Private Subnet 1 Deployment
    Value: !Join [ ",", !Ref SubnetIdList ]
  BackupRetentionPeriod:
    Description: Backup Retention Period in Days
    Value: !Ref BackupRetentionPeriod
  MultiAvailabilityZone:
    Description: Enable Multi Availability Zones?
    Value: !Ref MultiAvailabilityZone
  SnapshotOnDelete:
    Description: Create Snapshot on Delete?
    Value: !Ref SnapshotOnDelete
  PreferredBackupWindow:
    Description: Preferred Backup Window
    Value: !Ref PreferredBackupWindow
  PreferredMaintenanceWindow:
    Description: Preferred Maintenance Window
    Value: !Ref PreferredMaintenanceWindow
  ConfigureProvisionedIops:
    Description: Configure Provisioned IOPS?
    Value: !Ref ConfigureProvisionedIops
  DeleteAfter:
    Description: It is ok to delete the Formation after this date
    Value: !Ref DeleteAfter
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Ownership
      Parameters:
      - Owner
      - Project
      - DeleteAfter
    - Label:
        default: Network Configuration
      Parameters:
      - VPC
      - SubnetIdList
    - Label:
        default: RDS Configuration
      Parameters:
      - SnapshotArn
      - InstanceType
      - BackupRetentionPeriod
      - PreferredBackupWindow
      - PreferredMaintenanceWindow
      - SnapshotOnDelete
      - ConfigureProvisionedIops
      - ProvisionedIopsValue
      - AutoMinorVersionUpgrade
      - TcpPort
      - MultiAvailabilityZone
    ParameterLabels:
      Owner:
        default: Team or Individual Owner
      DeleteAfter:
        default: Delete After Date
      InstanceType:
        default: Instance Type
      SubnetIdList:
        default: Private Subnet ID List
      MasterUsername:
        default: Master Username
      MasterUserPassword:
        default: Master User Password
      BackupRetentionPeriod:
        default: Backup Retention Period
      PreferredBackupWindow:
        default: Preferred Backup Window
      PreferredMaintenanceWindow:
        default: Preferred Maintenance Window
      ConfigureProvisionedIops:
        default: Configure Provisioned IOPS?
      ProvisionedIopsValue:
        default: Provisioned IOPS Value
      AutoMinorVersionUpgrade:
        default: Auto Minor Version Upgrade
      TcpPort:
        default: TCP Port
      MultiAvailabilityZone:
        default: Multi Availability Zone?
      SetupAlarms:
        default: Setup Alarms?
      SnapshotOnDelete:
        default: Snapshot On Delete?
      ConfigureDns:
        default: Configure DNS
      SnapshotArn:
        default: Snapshot ARN
